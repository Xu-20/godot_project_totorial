{"ast":null,"code":"var _jsxFileName = \"G:\\\\Github\\\\\\u7B2C\\u4E00\\u9636\\u6BB5\\\\\\u8BA1\\u5212\\u8868\\u5355\\\\src\\\\components\\\\Logs\\\\Logs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport LogItem from './LogItem/LogItem';\nimport './Logs.css';\nimport Card from '../UI/Card/Card';\nimport LogFilter from './LogFilter/LogFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Logs = props => {\n  _s();\n  //创建useState hook，用于存储年份\n  const [year, setYear] = useState(2021);\n  //创建一个储存过滤后的日志数据的state\n  const [filterData, setFilterData] = useState([]);\n\n  //创建useEffect hook，用于过滤日志数据\n  useEffect(() => {\n    const newfilterData = year === null ? props.logsData : props.logsData.filter(item => item.date.getFullYear() === year);\n    setFilterData(newfilterData);\n  }, [year, props.logsData]);\n\n  //创建handleYearChange函数，用于改变年份\n  const handleYearChange = e => {\n    setYear(parseInt(e.target.value), 10);\n  };\n\n  //创建一个函数，用来显示所有年份的数据\n  const handleShowAllYears = () => {\n    setYear(null);\n  };\n  const logItemDate = filterData.map(item => /*#__PURE__*/_jsxDEV(LogItem, {\n    onDelLog: () => props.onDelLog(item.id),\n    ...item\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 48\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"logs\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logs-header\",\n      children: [/*#__PURE__*/_jsxDEV(LogFilter, {\n        onYearChange: handleYearChange,\n        year: year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"show-all-btn\",\n        onClick: handleShowAllYears,\n        children: \"\\u663E\\u793A\\u5168\\u90E8\\u5E74\\u4EFD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), logItemDate.length !== 0 ? logItemDate : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-logs\",\n      children: \"No logs found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 49\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Logs, \"46ZQWVsovBArRTBQmmRgIIHX3qU=\");\n_c = Logs;\nexport default Logs;\nvar _c;\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"names":["React","useState","useEffect","LogItem","Card","LogFilter","jsxDEV","_jsxDEV","Logs","props","_s","year","setYear","filterData","setFilterData","newfilterData","logsData","filter","item","date","getFullYear","handleYearChange","e","parseInt","target","value","handleShowAllYears","logItemDate","map","onDelLog","id","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onYearChange","onClick","length","_c","$RefreshReg$"],"sources":["G:/Github/第一阶段/计划表单/src/components/Logs/Logs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport LogItem from './LogItem/LogItem'\r\nimport './Logs.css'\r\nimport Card from '../UI/Card/Card'\r\nimport LogFilter from './LogFilter/LogFilter'\r\n\r\nconst Logs = (props) => {\r\n  //创建useState hook，用于存储年份\r\n  const [year, setYear] = useState(2021);\r\n  //创建一个储存过滤后的日志数据的state\r\n  const [filterData, setFilterData] = useState([]);\r\n\r\n  //创建useEffect hook，用于过滤日志数据\r\n  useEffect(() => {\r\n    const newfilterData = year === null\r\n      ? props.logsData\r\n      : props.logsData.filter(item => item.date.getFullYear() === year)\r\n    setFilterData(newfilterData)\r\n  }, [year, props.logsData])\r\n\r\n\r\n  //创建handleYearChange函数，用于改变年份\r\n  const handleYearChange = (e) => {\r\n    setYear(parseInt(e.target.value), 10);\r\n  }\r\n\r\n  //创建一个函数，用来显示所有年份的数据\r\n  const handleShowAllYears = () => {\r\n    setYear(null);\r\n  }\r\n\r\n  const logItemDate = filterData.map((item) => <LogItem\r\n    onDelLog={() => props.onDelLog(item.id)}\r\n    key={item.id}\r\n    {...item}\r\n  />)\r\n  return (\r\n    <Card className='logs'>\r\n\r\n      <div className='logs-header'>\r\n        <LogFilter\r\n          onYearChange={handleYearChange}\r\n          year={year}\r\n        />\r\n        <button className='show-all-btn' onClick={handleShowAllYears}>显示全部年份</button>\r\n      </div>\r\n      {logItemDate.length !== 0 ? logItemDate : <p className='no-logs'>No logs found</p>}\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Logs"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAO,YAAY;AACnB,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,SAAS,MAAM,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACtB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC;EACA,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMa,aAAa,GAAGJ,IAAI,KAAK,IAAI,GAC/BF,KAAK,CAACO,QAAQ,GACdP,KAAK,CAACO,QAAQ,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,KAAKT,IAAI,CAAC;IACnEG,aAAa,CAACC,aAAa,CAAC;EAC9B,CAAC,EAAE,CAACJ,IAAI,EAAEF,KAAK,CAACO,QAAQ,CAAC,CAAC;;EAG1B;EACA,MAAMK,gBAAgB,GAAIC,CAAC,IAAK;IAC9BV,OAAO,CAACW,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,EAAE,EAAE,CAAC;EACvC,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/Bd,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMe,WAAW,GAAGd,UAAU,CAACe,GAAG,CAAEV,IAAI,iBAAKX,OAAA,CAACJ,OAAO;IACnD0B,QAAQ,EAAEA,CAAA,KAAMpB,KAAK,CAACoB,QAAQ,CAACX,IAAI,CAACY,EAAE,CAAE;IAAA,GAEpCZ;EAAI,GADHA,IAAI,CAACY,EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEb,CAAC,CAAC;EACH,oBACE3B,OAAA,CAACH,IAAI;IAAC+B,SAAS,EAAC,MAAM;IAAAC,QAAA,gBAEpB7B,OAAA;MAAK4B,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1B7B,OAAA,CAACF,SAAS;QACRgC,YAAY,EAAEhB,gBAAiB;QAC/BV,IAAI,EAAEA;MAAK;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACF3B,OAAA;QAAQ4B,SAAS,EAAC,cAAc;QAACG,OAAO,EAAEZ,kBAAmB;QAAAU,QAAA,EAAC;MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E,CAAC,EACLP,WAAW,CAACY,MAAM,KAAK,CAAC,GAAGZ,WAAW,gBAAGpB,OAAA;MAAG4B,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAa;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9E,CAAC;AAEX,CAAC;AAAAxB,EAAA,CA3CKF,IAAI;AAAAgC,EAAA,GAAJhC,IAAI;AA6CV,eAAeA,IAAI;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}